# name: Own AMI on EC2 with EBS
# on: [push]
# jobs:
  # packer:
  #   runs-on: ubuntu-latest
  #   name: packer
  #   permissions:
  #     packages: write
  #     contents: read
  #     id-token: write
  #   steps:
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         role-to-assume: arn:aws:iam::029687280754:role/github-actions-oidc
  #         aws-region: "eu-central-1"

  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     # fix backwards incompatibilities in template
  #     - name: Fix Template
  #       uses: hashicorp/packer-github-actions@master
  #       with:
  #         command: fix

  #     # validate templates
  #     - name: Validate Template
  #       uses: hashicorp/packer-github-actions@master
  #       with:
  #         command: validate
  #         arguments: -syntax-only
  #         target: packer.pkr.hcl

  #     # build artifact
  #     - name: Build Artifact
  #       uses: hashicorp/packer-github-actions@master
  #       with:
  #         command: build
  #         arguments: "-color=false -on-error=abort"
  #         target: ./packer
  #         working_directory: ./packer
  #       env:
  #         PACKER_LOG: 1
  #         HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
  #         HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
  #
  #     # additional steps to process artifacts
  #
  # terraform:
  #   runs-on: ubuntu-latest
  #   name: terraform
  # #  needs: packer
  #   permissions:
  #     packages: write
  #     contents: read
  #     id-token: write
  #   steps:
  #     # EXPORT THE CREDENTIALS - MARKETPLACE : "Configure AWS Credentials ACTION  GitHub Actions"
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         role-to-assume: arn:aws:iam::029687280754:role/github-actions-oidc
  #         aws-region: "eu-central-1"

  #     - name: Clone/Checkout your repository code infra
  #       uses: actions/checkout@v2

  #     - name: Terraform setup
  #       uses: hashicorp/setup-terraform@v1

  #     - name: Terraform init
  #       run: terraform init
  #       working-directory: ./infrastructure

  #     - name: Terraform apply
  #       run: terraform apply -auto-approve
  #       working-directory: ./infrastructure